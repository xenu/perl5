name: testsuite

on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "*"
  pull_request:

jobs:
  mingw64:
    name: "Windows mingw64"
    runs-on: windows-latest
    timeout-minutes: 120
    env:
      PERL_SKIP_TTY_TEST: 1
      CONTINUOUS_INTEGRATION: 1

    steps:
      - run: git config --global core.autocrlf false
      - uses: actions/checkout@v2
        with:
          fetch-depth: 10
      - name: Set up Perl build environment
        run: |
          # skip installing perl if it is already installed.
          if (!(Test-Path "C:\strawberry\perl\bin")) {
            choco install strawberryperl
          }
          echo @"
          C:\strawberry\c\bin
          C:\strawberry\perl\site\bin
          C:\strawberry\perl\bin
          "@ |
            Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Host perl -V
        run: perl -V
      - name: gcc --version
        run: gcc --version
      - name: Build
        shell: cmd
        run: |
          cd win32
          gmake CCHOME=C:\strawberry\c -f GNUMakefile -j2
      - name: Download
        run: Invoke-WebRequest https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
      - name: Extract
        run: Expand-Archive ngrok.zip
      - name: Auth
        run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      - name: Enable TS
        run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
      - run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
      - run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
      - run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
      - name: Create Tunnel
        run: .\ngrok\ngrok.exe tcp 3389

